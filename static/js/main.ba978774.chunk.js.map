{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","List","primaryText","secondaryText","Success","UserForm","step","state","setState","input","target","value","Confirm","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba978774.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton'\n\nexport class FormUserDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    render() {\n        const { values, handleChange } = this.props;\n        return (\n          <MuiThemeProvider>\n            <React.Fragment>\n              <AppBar title=\"Enter user details\" />\n              <TextField\n                hintText=\"Enter Your First Name\"\n                floatingLabelText=\"First Name\"\n                onChange={handleChange(\"firstName\")}\n                defaultValue={values.firstName}\n              />\n              <br />\n              <TextField\n                hintText=\"Enter Your Last Name\"\n                floatingLabelText=\"Last Name\"\n                onChange={handleChange(\"lastName\")}\n                defaultValue={values.lastName}\n              />\n              <br />\n              <TextField\n                hintText=\"Enter Your Email\"\n                floatingLabelText=\"Email\"\n                onChange={handleChange(\"email\")}\n                defaultValue={values.email}\n              />\n              <br />\n              <RaisedButton\n                label='Continue'\n                primary={true}\n                style={styles.button}\n                onClick={this.continue}\n              />\n            </React.Fragment>\n          </MuiThemeProvider>\n        );\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 30\n    }\n}\n\nexport default FormUserDetails;\n","import React, { Component } from \"react\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\n\nexport class FormPersonalDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <MuiThemeProvider>\n        <React.Fragment>\n          <AppBar title=\"Enter user details\" />\n          <TextField\n            hintText=\"Enter Your Occupation\"\n            floatingLabelText=\"Occupation\"\n            onChange={handleChange(\"occupation\")}\n            defaultValue={values.occupation}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your City\"\n            floatingLabelText=\"City\"\n            onChange={handleChange(\"city\")}\n            defaultValue={values.city}\n          />\n          <br />\n          <TextField\n            hintText=\"Enter Your Bio\"\n            floatingLabelText=\"Bio\"\n            onChange={handleChange(\"bio\")}\n            defaultValue={values.bio}\n          />\n          <br />\n          <RaisedButton\n            label=\"Continue\"\n            primary={true}\n            style={styles.button}\n            onClick={this.continue}\n          />\n          <RaisedButton\n            label=\"Back\"\n            primary={false}\n            style={styles.button}\n            onClick={this.back}\n          />\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    margin: 30,\n  },\n};\n\nexport default FormPersonalDetails;\n","import React, { Component } from \"react\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport { List, ListItem } from \"material-ui/List\";\nimport RaisedButton from \"material-ui/RaisedButton\";\n\nexport class FormUserDetails extends Component {\n  continue = (e) => {  \n    e.preventDefault();\n    // Process Your Form //\n    this.props.nextStep();\n  };\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values: { firstName, lastName, email, \n        occupation, city, bio} } = this.props;\n    return (\n      <MuiThemeProvider>\n        <React.Fragment>\n          <AppBar title=\"Confirm User Data\" />\n          <List>\n            <ListItem primaryText=\"First Name\" secondaryText={firstName} />\n            <ListItem primaryText=\"Last Name\" secondaryText={lastName} />\n            <ListItem primaryText=\"Email\" secondaryText={email} />\n            <ListItem primaryText=\"Occupation\" secondaryText={occupation} />\n            <ListItem primaryText=\"City\" secondaryText={city} />\n            <ListItem primaryText=\"Bio\" secondaryText={bio} />\n          </List>\n          <br />\n          <RaisedButton\n            label=\"Confirm and Continue\"\n            primary={true}\n            style={styles.button}\n            onClick={this.continue}\n          />\n          <RaisedButton\n            label=\"Back\"\n            primary={false}\n            style={styles.button}\n            onClick={this.back}\n          />\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    margin: 30,\n  },\n};\n\nexport default FormUserDetails;\n","import React, { Component } from \"react\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\n\n\nexport class Success extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n        <React.Fragment>\n          <AppBar title=\"Success\" />\n          <h1>Thank You Visitor</h1>\n          <p>Cristian is a good man, you can count on him!</p>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;\n","import React, { Component } from 'react';\n\nimport FormUserDetails from './FormUserDetails';\nimport FormPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Success';\n\nexport class UserForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            step: 1,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            occupation: \"\",\n            city: \"\",\n            bio: \"\",\n        }\n    }\n\n    //Proceed to next step\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step + 1 })\n    }\n\n    //Go back to previous step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 1 })\n    }\n\n    //Handle fields change\n    handleChange = input => e => {\n        this.setState({[input]: e.target.value})\n    }\n\n    render() {\n        const { step } = this.state;\n        const { firstName, lastName, email, occupation, city, bio } = this.state;\n        const values = { firstName, lastName, email, occupation, city, bio };\n        \n        switch (step) {\n            case 1:\n                return (\n                    <FormUserDetails \n                        nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                );\n            case 2:\n                return (\n                    <FormPersonalDetails\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                );\n            case 3:\n                return (\n                  <Confirm\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    handleChange={this.handleChange}\n                    values={values}\n                  />\n                );\n            case 4:\n                return (\n                    <Success />\n                )\n            default:\n                return this.state;\n        }\n    }\n}\n\nexport default UserForm\n","import React from 'react';\nimport './App.css';\n\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}